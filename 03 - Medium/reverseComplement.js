const reverseComplement = (inputSequence) => {
  const complement = {
    "A": "U",
    "U": "A",
    "G": "C",
    "C": "G"
  }

  return [...inputSequence].map(i => complement[i]).reverse().join('');
}

// Tests

console.log(reverseComplement("GAGGC"), "GCCUC")
console.log(reverseComplement("UCUCG"), "CGAGA")
console.log(reverseComplement("CAGGU"), "ACCUG")
console.log(reverseComplement("UAUUUUUCCA"), "UGGAAAAAUA")
console.log(reverseComplement("GUAGGCAACA"), "UGUUGCCUAC")
console.log(reverseComplement("UAGCUAAAUC"), "GAUUUAGCUA")
console.log(reverseComplement("AUGAGCGUAC"), "GUACGCUCAU")
console.log(reverseComplement("UUAUACCCGAGUCGGAUUUGUCACU"), "AGUGACAAAUCCGACUCGGGUAUAA")
console.log(reverseComplement("CUUGUGCGCUAUACAUCGAGUAGUUGCUAGAGUAUGUUACUCAAGAGCGC"), "GCGCUCUUGAGUAACAUACUCUAGCAACUACUCGAUGUAUAGCGCACAAG")
console.log(reverseComplement("UUAACUGGGGUGAACUGUCCUGAGCCUAUGGAUCUGCGCGCAGGGCUUCAAAUGGAGUUCGGAAUGACCAUCGAUUCUCGAUGUUUGGCACGAAGUCGCA"), "UGCGACUUCGUGCCAAACAUCGAGAAUCGAUGGUCAUUCCGAACUCCAUUUGAAGCCCUGCGCGCAGAUCCAUAGGCUCAGGACAGUUCACCCCAGUUAA")
console.log(reverseComplement("GCAGCUCCCCGUCCAUCGAUAAGAGACGUUCCUGCCACGGUUGCUCUACUUUAGAGGUACAACUCUCUUGUAUAAGCCUAGCGUCCUUCCGGAGGAGCCGGGUGCCGUCUCAUGGAUCCGCAUUGUCAGGUUGGCCACGACCAUUCAAAAUUUAACUUACACUUAUGAUGCGAAAUGCACACCAUAGUGCCACCGUGAUAAGUUUCCAGCCGAACUAUGCGAGUUUGCGAGAGGCAGGCUCAAUGCCAGCAGGGGCCAGUGAGGGCUCGAUCUAAAACCCGCUGUUGAUAUUCGUAAACGGUGGCCCGCCUGUUCAGUUACUCUCCAUAUCAUCACCUCAGGUUGAGCCAAAGUAGCCGCGCCGCAUCAAGCUGAGAGAAGUGCACGAGGUUUACACGUAGCCCUCUCUGAUCCGGUUGCCGUGCACUAGCGAUUUGUUUCACAUGAAUCGGUCGGGAGUACACACACAUAUAUUAUUAGAGUUGUUCAAUCCCGCAGAG"), "CUCUGCGGGAUUGAACAACUCUAAUAAUAUAUGUGUGUGUACUCCCGACCGAUUCAUGUGAAACAAAUCGCUAGUGCACGGCAACCGGAUCAGAGAGGGCUACGUGUAAACCUCGUGCACUUCUCUCAGCUUGAUGCGGCGCGGCUACUUUGGCUCAACCUGAGGUGAUGAUAUGGAGAGUAACUGAACAGGCGGGCCACCGUUUACGAAUAUCAACAGCGGGUUUUAGAUCGAGCCCUCACUGGCCCCUGCUGGCAUUGAGCCUGCCUCUCGCAAACUCGCAUAGUUCGGCUGGAAACUUAUCACGGUGGCACUAUGGUGUGCAUUUCGCAUCAUAAGUGUAAGUUAAAUUUUGAAUGGUCGUGGCCAACCUGACAAUGCGGAUCCAUGAGACGGCACCCGGCUCCUCCGGAAGGACGCUAGGCUUAUACAAGAGAGUUGUACCUCUAAAGUAGAGCAACCGUGGCAGGAACGUCUCUUAUCGAUGGACGGGGAGCUGC")
